---

- hosts: all
  become: true
  pre_tasks:

  - name: update repo cache (CentOS)
    tags: always
    yum:
      # update_only: yes
      update_cache: yes
    changed_when: false
    when: ansible_distribution == "CentOS"

  - name: update repo cache (Ubuntu)
    tags: always
    apt:
      # upgrade: dist
      update_cache: yes
    changed_when: false
    when: ansible_distribution == "Ubuntu"

# =====================================
# users management
# =====================================

- hosts: all
  become: true
  tasks:

  # we want to be able to log as simone 
  # after bootstrap it's just a placeholder
  - name: add ssh key for simone
    tags: always,users
    authorized_key:
      user: simone
      key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEF5bvFWct5CY2Fea3zo4+9lYmgyuWrnLbe/F4lTImq1 mat default"


# =====================================
# workstations play
# =====================================

# Adding new section that will target workstations
# we can use ansible to probision our local workstation as well, but since its WSL I'm not doing that 
- hosts: workstations
  become: true
  tasks: 

  # first we install zip files that will allow to unzip files from command line
  - name: install unzip
    tags: terraform
    package:
      name: unzip

  # it will allow to download and unzip file
  - name: install terraform
    tags: terraform
    unarchive:
      src: https://releases.hashicorp.com/terraform/0.12.28/terraform_0.12.28_linux_amd64.zip
      dest: /usr/local/bin
      remote_src: yes
      mode: 0755
      owner: root
      group: root 

# =====================================
# web_servers play
# =====================================

- hosts: web_servers
  become: true
  tasks:

  - name: install apache and php for Ubuntu servers
    tags: apache,apach2,ubuntu
    apt: 
      name:
        - apache2
        - libapache2-mod-php
      state: latest
    when: ansible_distribution == "Ubuntu"

  - name: install apache and php for CentOS servers
    tags: apache,centos,httpd
    yum:
      name:
        - httpd
        - php
      state: latest
    when: ansible_distribution == "CentOS"

  # starts httpd service for centos
  - name: start httpd (CentOS)
    tags: apache,centos,httpd
    service: 
      name: httpd
      state: started
      enabled: yes
    when: ansible_distribution == "CentOS"

  - name: change e-mail address for admin
    tags: apache,centos,httpd
    lineinfile: 
      path: /etc/httpd/conf/httpd.conf
      regexp: '^ServerAdmin'
      line: ServerAdmin somebody@somewhere.net
    when: ansible_distribution == "CentOS"
    register: httpd
  
  - name: restart httpd (CentOS)
    tags: apache,centos,httpd
    service:
      name: httpd
      state: restarted
    when: httpd.changed

  - name: copy default html file for site
    tags: apache,apache2,httpd
    # copy module is used 
    copy:
    # directory files is assumed so we don't need to call it
      src: default_site.html
    # file in the destination does not need to have the same name
    # index html is default webroot for apache
      dest: /var/www/html/index.html
      owner: root
      group: root
      mode: 0644

# =====================================
# db_servers play
# =====================================

- hosts: db_servers
  become: true
  tasks:
  - name: install mariadb package (CentOS)
    tags: centos,db,mariadb
    yum:
      name: mariadb
      state: latest
    when: ansible_distribution == "CentOS"

  - name: install mariadb package (Ubuntu)
    tags: db,mariadb,ubuntu
    apt:
      name: mariadb-server
      state: latest
    when: ansible_distribution == "Ubuntu"

# =====================================
# file_servers play
# =====================================

- hosts: file_servers
  become: true
  tasks:

  - name: install samba package
    tags: samba
    package: 
      name: samba
      state: latest
